<Application x:Class="GUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:GUI"
             xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/Blue.xaml"></ResourceDictionary>
                <ResourceDictionary Source="Styles/CoreResourceDictionary.xaml"></ResourceDictionary>
                <ResourceDictionary Source="Styles/DataWindowResourceDictionary.xaml"></ResourceDictionary>
                <ResourceDictionary Source="Styles/UserControlResourceDictionary.xaml"></ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Indigo.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="CustomDataGridRowStyle"
               TargetType="{x:Type DataGridRow}">
                <Style.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="#3F87CEFA" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
                                 Color="Transparent" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                 Color="Black" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}"
                                 Color="Black" />
                    <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}"
                                 Color="SkyBlue" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                                 Color="#3FD3D3D3" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                                 Color="Black" />
                    <!--<SolidColorBrush x:Key="{x:Static SystemColors.GrayTextBrushKey}" Color=""/>-->
                </Style.Resources>

                <Setter Property="Background"
                    Value="#7FFFFFFF" />
                <Setter Property="SnapsToDevicePixels"
                    Value="true" />
                <Setter Property="Validation.ErrorTemplate"
                    Value="{x:Null}" />
                <Setter Property="ValidationErrorTemplate"
                    Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border x:Name="DGR_Border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Column="1"
                                                        ItemsPanel="{TemplateBinding ItemsPanel}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <DataGridDetailsPresenter Grid.Column="1"
                                                          Grid.Row="1"
                                                          SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                          Visibility="{TemplateBinding DetailsVisibility}" />
                                    <DataGridRowHeader Grid.RowSpan="2"
                                                   SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                   Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsNewItem"
                         Value="True">
                        <Setter Property="Margin"
                            Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                    </Trigger>
                    <Trigger Property="IsSelected"
                         Value="True">
                        <Setter Property="Background"
                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    </Trigger>
                    <Trigger Property="Validation.HasError"
                         Value="True">
                        <Setter Property="Background"
                            Value="#3FFF0000" />
                        <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="IconButtonStyle" TargetType="Button">
                <Style.Resources>
                    <sys:Double x:Key="IconSize">12</sys:Double>
                    <FontFamily x:Key="IconFontFamily">Segoe MDL2 Assets</FontFamily>
                    <Thickness x:Key="Spacing" Left="7"/>
                </Style.Resources>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="Segoe UI Light"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" TextElement.Foreground="{TemplateBinding Foreground}">
                                    <TextBlock x:Name="Icon" FontFamily="{DynamicResource IconFontFamily}" Text="{TemplateBinding Tag}" VerticalAlignment="Center" FontSize="{DynamicResource IconSize}"/>
                                    <TextBlock x:Name="Text" Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" Margin="{DynamicResource Spacing}" FontFamily="{TemplateBinding FontFamily}"/>
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Content" Value="">
                                    <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="Tag" Value="">
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="Text" Property="Margin" Value="0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="#767676"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Foreground" Value="Black"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="Gray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="FlatComboBoxItemContainerStyle"
               TargetType="{x:Type ComboBoxItem}">
                <Style.Resources>
                    <SolidColorBrush x:Key="popupHighlight"
                                 Color="#DADADA" />
                </Style.Resources>
                <Setter Property="BorderThickness"
                    Value="0" />
                <Setter Property="Margin"
                    Value="0" />
                <Setter Property="Padding"
                    Value="10,5" />
                <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Bd"
                                SnapsToDevicePixels="True"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                Margin="{TemplateBinding Margin}">
                                <Border.Background>
                                    <SolidColorBrush Opacity="0.4"
                                                 Color="{Binding Path=Background.Color, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Border.Background>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted"
                                     Value="True">
                                    <Setter Property="Background"
                                        Value="{DynamicResource popupHighlight}" />
                                </Trigger>
                                <!--<Trigger Property="IsSelected"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="{DynamicResource LightAppColor}" />
                            </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="FlatComboBoxStyle"
               TargetType="{x:Type ComboBox}">
                <Style.Resources>
                    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush"
                                 Color="#FF999999" />
                    <SolidColorBrush x:Key="popupBackground"
                                 Color="#fff2f2f2" />
                    <SolidColorBrush x:Key="SemiTransparentBlack"
                                 Color="#3F7F7F7F" />
                    <SolidColorBrush x:Key="ComboBoxMouseOverBorderBrush"
                                 Color="#FF666666" />
                </Style.Resources>
                <Setter Property="Margin" Value="10, 5"/>
                <Setter Property="Padding" Value="5,0"/>
                <Setter Property="SnapsToDevicePixels"
                    Value="True" />
                <Setter Property="OverridesDefaultStyle"
                    Value="True" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                    Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll"
                    Value="True" />
                <Setter Property="FocusVisualStyle"
                    Value="{x:Null}" />
                <Setter Property="FontFamily"
                    Value="Segoe UI Light" />
                <Setter Property="FontSize"
                    Value="16" />
                <Setter Property="BorderBrush"
                    Value="{DynamicResource ComboBoxNormalBorderBrush}" />
                <Setter Property="BorderThickness"
                    Value="2" />
                <Setter Property="Background"
                    Value="Transparent" />
                <Setter Property="VerticalContentAlignment"
                    Value="Center" />
                <Setter Property="HorizontalContentAlignment"
                    Value="Left" />
                <Setter Property="FlowDirection"
                    Value="LeftToRight" />
                <Setter Property="ItemContainerStyle"
                    Value="{StaticResource FlatComboBoxItemContainerStyle}" />
                <Setter Property="Validation.ErrorTemplate"
                    Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}">
                                <Grid>
                                    <TextBox Name="PART_EditableTextBox"
                                         Margin="3, 3, 33, 3"
                                         Padding="5,0"
                                         IsReadOnly="{TemplateBinding IsReadOnly}"
                                         Visibility="Hidden"
                                         Background="{TemplateBinding Background}"
                                         BorderThickness="0"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         Focusable="True"
                                         FontSize="{TemplateBinding FontSize}">
                                        <!--<TextBox.Template>
                                        <ControlTemplate TargetType="TextBox">
                                            <Border Name="PART_ContentHost"
                                                    Focusable="False"
                                                    Padding="5,0" />
                                        </ControlTemplate>
                                    </TextBox.Template>-->
                                    </TextBox>

                                    <ToggleButton x:Name="ToggleButton"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Focusable="False"
                                              ClickMode="Press"
                                              Foreground="{TemplateBinding Foreground}"
                                              Background="{TemplateBinding Background}"
                                              BorderThickness="0"
                                              Padding="5,3,3,3"
                                              
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Tag="{TemplateBinding Tag}">
                                        <Grid>
                                            <ContentPresenter Name="ContentSite"
                                                          IsHitTestVisible="False"
                                                          Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                                            <ContentPresenter Name="ContentSite2"
                                                          IsHitTestVisible="False"
                                                          Content="{TemplateBinding DataContext}"
                                                          Visibility="Collapsed" />
                                        </Grid>

                                    </ToggleButton>

                                    <!-- Popup showing items -->
                                    <Popup Name="Popup"
                                       Placement="Bottom"
                                       Focusable="False"
                                       AllowsTransparency="True"
                                       IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                       PopupAnimation="Fade">
                                        <Border x:Name="DropDownBorder"
                                            Background="{DynamicResource popupBackground}"
                                            BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"
                                            BorderThickness="1"
                                            Padding="0,7"
                                            MinWidth="{TemplateBinding ComboBox.ActualWidth}">
                                            <ScrollViewer Margin="0"
                                                      SnapsToDevicePixels="True"
                                                      DataContext="{Binding}">
                                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="ItemsControl.HasItems"
                                     Value="False">
                                    <Setter Property="FrameworkElement.MinHeight"
                                        TargetName="DropDownBorder"
                                        Value="95" />
                                </Trigger>
                                <Trigger Property="ItemsControl.IsGrouping"
                                     Value="True">
                                    <Setter Property="ScrollViewer.CanContentScroll"
                                        Value="False" />
                                </Trigger>
                                <Trigger Property="IsEditable"
                                     Value="True">
                                    <Setter Property="KeyboardNavigation.IsTabStop"
                                        Value="False" />
                                    <Setter Property="UIElement.Visibility"
                                        TargetName="PART_EditableTextBox"
                                        Value="Visible" />
                                    <Setter Property="UIElement.Visibility"
                                        TargetName="ContentSite"
                                        Value="Hidden" />
                                    <Setter TargetName="ToggleButton"
                                        Property="HorizontalAlignment"
                                        Value="Right" />
                                    <Setter TargetName="ToggleButton"
                                        Property="Padding"
                                        Value="0" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="ComboBox.IsEditable"
                                               Value="False" />
                                        <Condition Property="IsReadOnly"
                                               Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ContentSite"
                                        Property="Visibility"
                                        Value="Collapsed" />
                                    <Setter TargetName="ContentSite2"
                                        Property="Visibility"
                                        Value="Visible" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver"
                                               Value="True" />
                                        <Condition Property="IsEditable"
                                               Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background"
                                        Value="{StaticResource SemiTransparentBlack}" />
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver"
                                     Value="True">
                                    <Setter Property="BorderBrush"
                                        Value="{DynamicResource ComboBoxMouseOverBorderBrush}" />
                                </Trigger>
                                <Trigger Property="IsChecked"
                                     SourceName="ToggleButton"
                                     Value="True">
                                    <Setter Property="Background"
                                        TargetName="ToggleButton"
                                        Value="#4C7F7F7F" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                     SourceName="ToggleButton"
                                     Value="True">
                                    <Setter Property="Background"
                                        TargetName="ToggleButton"
                                        Value="{StaticResource SemiTransparentBlack}" />
                                </Trigger>
                                <Trigger Property="Validation.HasError"
                                     Value="True">
                                    <Setter Property="BorderBrush"
                                        Value="Red" />
                                    <Setter Property="BorderThickness"
                                        Value="1" />
                                    <Setter Property="ToolTip"
                                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MenuButtonStyle" TargetType="Button" BasedOn="{StaticResource IconButtonStyle}">
                <Style.Resources>
                    <sys:Double x:Key="IconSize">25</sys:Double>
                    <Thickness x:Key="Spacing" Left="15"/>
                </Style.Resources>
                <Setter Property="FontSize" Value="28"/>
                <Setter Property="Foreground" Value="DarkRed"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Margin" Value="0,5"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="Red"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Foreground" Value="DarkRed"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="CustomTextboxStyle" TargetType="TextBox">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontFamily" Value="Segoe UI Light"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Margin" Value="10, 5"/>
                <Setter Property="Padding" Value="5,0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="CustomTextblockStyle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontFamily" Value="Segoe UI Light"/>
                <Setter Property="Margin" Value="10"/>
            </Style>
            <Style x:Key="ToolbarButtonStyle" TargetType="Button" BasedOn="{StaticResource IconButtonStyle}">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="10,0"/>
                <Setter Property="Foreground" Value="#0063B1"/>
            </Style>
            <Style x:Key="CustomDataGridStyle"
               TargetType="{x:Type DataGrid}">
                <Setter Property="Background"
                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderBrush"
                    Value="#FF688CAF" />
                <Setter Property="BorderThickness"
                    Value="1" />
                <Setter Property="RowDetailsVisibilityMode"
                    Value="VisibleWhenSelected" />
                <Setter Property="ScrollViewer.CanContentScroll"
                    Value="true" />
                <Setter Property="ScrollViewer.PanningMode"
                    Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled"
                    Value="False" />
                <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
                <Setter Property="VerticalAlignment"
                    Value="Stretch" />
                <Setter Property="AutoGenerateColumns"
                    Value="False" />
                <Setter Property="BorderThickness"
                    Value="0" />
                <Setter Property="FontFamily"
                    Value="Segoe UI Light" />
                <Setter Property="FontSize"
                    Value="16" />
                <Setter Property="ColumnWidth"
                    Value="*" />
                <Setter Property="GridLinesVisibility"
                    Value="None" />
                <Setter Property="RowStyle"
                    Value="{StaticResource CustomDataGridRowStyle}" />
                <Setter Property="CellStyle"
                    Value="{StaticResource CustomDataGridCellStyle}" />
                <Setter Property="ColumnHeaderStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="Height"
                                Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=ColumnHeaderHeight}" />
                            <Setter Property="Background"
                                Value="#7FFFFFFF" />
                            <Setter Property="VerticalContentAlignment"
                                Value="Center" />
                            <Setter Property="HorizontalContentAlignment"
                                Value="Center" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background"
                                        Value="#3F979797" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="RowHeaderStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridRowHeader">
                            <Setter Property="Width"
                                Value="25" />
                            <Setter Property="Background"
                                Value="Transparent" />
                            <Setter Property="VerticalContentAlignment"
                                Value="Center" />
                            <Setter Property="HorizontalContentAlignment"
                                Value="Center" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridRow}, Path=IsSelected, Mode=TwoWay}"
                                              Margin="4,0"
                                              Background="#7FFFFFFF" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGrid}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="DG_ScrollViewer"
                                          Focusable="false">
                                    <ScrollViewer.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                              
                                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                            Grid.Column="1"
                                                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                                            BorderBrush="LightGray"
                                                                            BorderThickness="0.5,0" />
                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                    Grid.ColumnSpan="2"
                                                                    Grid.Row="1" />
                                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                                       Grid.Column="2"
                                                       Maximum="{TemplateBinding ScrollableHeight}"
                                                       Orientation="Vertical"
                                                       Grid.Row="1"
                                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       ViewportSize="{TemplateBinding ViewportHeight}" />
                                                <Grid Grid.Column="1"
                                                  Grid.Row="2">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                           Grid.Column="1"
                                                           Maximum="{TemplateBinding ScrollableWidth}"
                                                           Orientation="Horizontal"
                                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                           ViewportSize="{TemplateBinding ViewportWidth}" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </ScrollViewer.Template>
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping"
                                   Value="true" />
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                   Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll"
                            Value="false" />
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="CustomPasswordBoxStyle" TargetType="PasswordBox">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontFamily" Value="Segoe UI Light"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Margin" Value="10, 5"/>
                <Setter Property="Padding" Value="5,0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="CustomDataGridCellStyle"
               TargetType="{x:Type DataGridCell}">
                <Setter Property="VerticalContentAlignment"
                    Value="Center" />
                <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
                <Setter Property="Background"
                    Value="Transparent" />
                <Setter Property="BorderBrush"
                    Value="Transparent" />
                <Setter Property="BorderThickness"
                    Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <!--<Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>-->
                    <Trigger Property="IsKeyboardFocusWithin"
                         Value="True">
                        <Setter Property="BorderBrush"
                            Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected"
                                   Value="true" />
                            <Condition Property="Selector.IsSelectionActive"
                                   Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background"
                            Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                        <Setter Property="BorderBrush"
                            Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                        <Setter Property="Foreground"
                            Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                    </MultiTrigger>
                    <Trigger Property="IsEnabled"
                         Value="false">
                        <Setter Property="Foreground"
                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="CustomDataGridTextBoxStyle"
               TargetType="{x:Type TextBox}">
                <Setter Property="BorderThickness"
                    Value="0" />
                <Setter Property="Padding"
                    Value="0" />
                <Setter Property="VerticalContentAlignment"
                    Value="Center" />
                <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
                <Setter Property="Background"
                    Value="Transparent" />
                <Style.Triggers>
                    <Trigger Property="Validation.HasError"
                         Value="True">
                        <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="CustomDatePickerStyle"
               TargetType="{x:Type DatePicker}">
                <Style.Resources>
                    <Style TargetType="{x:Type DatePickerTextBox}">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <TextBox x:Name="PART_TextBox"
                                         BorderThickness="0"
                                         Background="{TemplateBinding Background}"
                                         Margin="0"
                                         Text="{Binding Path=SelectedDate, RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}, ConverterCulture=vi-VN, StringFormat='dddd dd/MM/yyyy'}" 
                                         Padding="5,0"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         Style="{StaticResource CustomDataGridTextBoxStyle}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Style.Resources>

                <Setter Property="Foreground"
                    Value="#FF333333" />
                <Setter Property="IsTodayHighlighted"
                    Value="True" />
                <Setter Property="SelectedDateFormat"
                    Value="Short" />
                <Setter Property="Background"
                    Value="Transparent" />
                <Setter Property="FontFamily"
                    Value="Segoe UI Light" />
                <Setter Property="Margin"
                    Value="10,5" />
                <Setter Property="BorderThickness"
                    Value="1" />
                <Setter Property="BorderBrush"
                    Value="#FFABADB3" />
                <Setter Property="HorizontalContentAlignment"
                    Value="Left" />
                <Setter Property="VerticalContentAlignment"
                    Value="Center" />
                <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
                <Setter Property="VerticalAlignment"
                    Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DatePicker}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0"
                                                             To="1"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Storyboard.TargetName="PART_DisabledVisual" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="PART_Root"
                                  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                    <Grid.Resources>
                                        <SolidColorBrush x:Key="DisabledBrush"
                                                     Color="#A5FFFFFF" />
                                        <ControlTemplate x:Key="DropDownButtonTemplate"
                                                     TargetType="{x:Type Button}">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition GeneratedDuration="0" />
                                                            <VisualTransition GeneratedDuration="0:0:0.1"
                                                                          To="MouseOver" />
                                                            <VisualTransition GeneratedDuration="0:0:0.1"
                                                                          To="Pressed" />
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0"
                                                                            To="#FF448DCA"
                                                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="Background" />
                                                                <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                                          Duration="00:00:00.001"
                                                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
                                                                                          Storyboard.TargetName="BackgroundGradient">
                                                                    <SplineColorKeyFrame KeyTime="0"
                                                                                     Value="#7FFFFFFF" />
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                                          Duration="00:00:00.001"
                                                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
                                                                                          Storyboard.TargetName="BackgroundGradient">
                                                                    <SplineColorKeyFrame KeyTime="0"
                                                                                     Value="#CCFFFFFF" />
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                                          Duration="00:00:00.001"
                                                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                                                          Storyboard.TargetName="BackgroundGradient">
                                                                    <SplineColorKeyFrame KeyTime="0"
                                                                                     Value="#F2FFFFFF" />
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                                          Duration="00:00:00.001"
                                                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                                          Storyboard.TargetName="Background">
                                                                    <SplineColorKeyFrame KeyTime="0"
                                                                                     Value="#FF448DCA" />
                                                                </ColorAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                                           Duration="00:00:00.001"
                                                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                           Storyboard.TargetName="Highlight">
                                                                    <SplineDoubleKeyFrame KeyTime="0"
                                                                                      Value="1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                                          Duration="00:00:00.001"
                                                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                                                          Storyboard.TargetName="BackgroundGradient">
                                                                    <SplineColorKeyFrame KeyTime="0"
                                                                                     Value="#EAFFFFFF" />
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                                          Duration="00:00:00.001"
                                                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
                                                                                          Storyboard.TargetName="BackgroundGradient">
                                                                    <SplineColorKeyFrame KeyTime="0"
                                                                                     Value="#C6FFFFFF" />
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                                          Duration="00:00:00.001"
                                                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
                                                                                          Storyboard.TargetName="BackgroundGradient">
                                                                    <SplineColorKeyFrame KeyTime="0"
                                                                                     Value="#6BFFFFFF" />
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0"
                                                                                          Duration="00:00:00.001"
                                                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                                                          Storyboard.TargetName="BackgroundGradient">
                                                                    <SplineColorKeyFrame KeyTime="0"
                                                                                     Value="#F4FFFFFF" />
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Grid Background="#11FFFFFF"
                                                  FlowDirection="LeftToRight"
                                                  HorizontalAlignment="Center"
                                                  Height="18"
                                                  Margin="0"
                                                  VerticalAlignment="Center"
                                                  Width="19">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="20*" />
                                                        <ColumnDefinition Width="20*" />
                                                        <ColumnDefinition Width="20*" />
                                                        <ColumnDefinition Width="20*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="23*" />
                                                        <RowDefinition Height="19*" />
                                                        <RowDefinition Height="19*" />
                                                        <RowDefinition Height="19*" />
                                                    </Grid.RowDefinitions>
                                                    <Border x:Name="Highlight"
                                                        BorderBrush="#FF45D6FA"
                                                        BorderThickness="1"
                                                        Grid.ColumnSpan="4"
                                                        CornerRadius="0,0,1,1"
                                                        Margin="-1"
                                                        Opacity="0"
                                                        Grid.Row="0"
                                                        Grid.RowSpan="4" />
                                                    <Border x:Name="Background"
                                                        BorderBrush="#FFFFFFFF"
                                                        BorderThickness="1"
                                                        Background="#FF1F3B53"
                                                        Grid.ColumnSpan="4"
                                                        CornerRadius=".5"
                                                        Margin="0,-1,0,0"
                                                        Opacity="1"
                                                        Grid.Row="1"
                                                        Grid.RowSpan="3" />
                                                    <Border x:Name="BackgroundGradient"
                                                        BorderBrush="#BF000000"
                                                        BorderThickness="1"
                                                        Grid.ColumnSpan="4"
                                                        CornerRadius=".5"
                                                        Margin="0,-1,0,0"
                                                        Opacity="1"
                                                        Grid.Row="1"
                                                        Grid.RowSpan="3">
                                                        <Border.Background>
                                                            <LinearGradientBrush EndPoint=".7,1"
                                                                             StartPoint=".7,0">
                                                                <GradientStop Color="#FFFFFFFF"
                                                                          Offset="0" />
                                                                <GradientStop Color="#F9FFFFFF"
                                                                          Offset="0.375" />
                                                                <GradientStop Color="#E5FFFFFF"
                                                                          Offset="0.625" />
                                                                <GradientStop Color="#C6FFFFFF"
                                                                          Offset="1" />
                                                            </LinearGradientBrush>
                                                        </Border.Background>
                                                    </Border>
                                                    <Rectangle Grid.ColumnSpan="4"
                                                           Grid.RowSpan="1"
                                                           StrokeThickness="1">
                                                        <Rectangle.Fill>
                                                            <LinearGradientBrush EndPoint="0.3,-1.1"
                                                                             StartPoint="0.46,1.6">
                                                                <GradientStop Color="#FF4084BD" />
                                                                <GradientStop Color="#FFAFCFEA"
                                                                          Offset="1" />
                                                            </LinearGradientBrush>
                                                        </Rectangle.Fill>
                                                        <Rectangle.Stroke>
                                                            <LinearGradientBrush EndPoint="0.48,-1"
                                                                             StartPoint="0.48,1.25">
                                                                <GradientStop Color="#FF494949" />
                                                                <GradientStop Color="#FF9F9F9F"
                                                                          Offset="1" />
                                                            </LinearGradientBrush>
                                                        </Rectangle.Stroke>
                                                    </Rectangle>
                                                    <Path Grid.ColumnSpan="4"
                                                      Grid.Column="0"
                                                      Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z"
                                                      Fill="#FF2F2F2F"
                                                      HorizontalAlignment="Center"
                                                      Margin="4,3,4,3"
                                                      Grid.Row="1"
                                                      Grid.RowSpan="3"
                                                      RenderTransformOrigin="0.5,0.5"
                                                      Stretch="Fill"
                                                      VerticalAlignment="Center" />
                                                    <Ellipse Grid.ColumnSpan="4"
                                                         Fill="#FFFFFFFF"
                                                         HorizontalAlignment="Center"
                                                         Height="3"
                                                         StrokeThickness="0"
                                                         VerticalAlignment="Center"
                                                         Width="3" />
                                                    <Border x:Name="DisabledVisual"
                                                        BorderBrush="#B2FFFFFF"
                                                        BorderThickness="1"
                                                        Grid.ColumnSpan="4"
                                                        CornerRadius="0,0,.5,.5"
                                                        Opacity="0"
                                                        Grid.Row="0"
                                                        Grid.RowSpan="4" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="PART_Button"
                                        Grid.Column="1"
                                        Foreground="{TemplateBinding Foreground}"
                                        Focusable="False"
                                        HorizontalAlignment="Left"
                                        Margin="3,0,3,0"
                                        Grid.Row="0"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Width="20"
                                        Style="{StaticResource IconButtonStyle}"
                                        Content=""
                                        Tag="&#xE163;">
                                        <Button.Resources>
                                            <sys:Double x:Key="IconSize">16</sys:Double>
                                        </Button.Resources>
                                    </Button>
                                    <DatePickerTextBox x:Name="PART_TextBox"
                                                   Grid.Column="0"
                                                   Focusable="{TemplateBinding Focusable}"
                                                   Grid.Row="0"
                                                   Background="{TemplateBinding Background}"
                                                   Margin="0" 
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Grid x:Name="PART_DisabledVisual"
                                      Grid.ColumnSpan="2"
                                      Grid.Column="0"
                                      IsHitTestVisible="False"
                                      Opacity="0"
                                      Grid.Row="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Grid.Column="0"
                                               Fill="#A5FFFFFF"
                                               RadiusY="1"
                                               Grid.Row="0"
                                               RadiusX="1" />
                                        <Rectangle Grid.Column="1"
                                               Fill="#A5FFFFFF"
                                               Height="18"
                                               Margin="3,0,3,0"
                                               RadiusY="1"
                                               Grid.Row="0"
                                               RadiusX="1"
                                               Width="19" />
                                        <Popup x:Name="PART_Popup"
                                           AllowsTransparency="True"
                                           Placement="Bottom"
                                           PlacementTarget="{Binding ElementName=PART_TextBox}"
                                           StaysOpen="False" />
                                    </Grid>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}"
                                         Value="false">
                                    <Setter Property="Foreground"
                                        TargetName="PART_TextBox"
                                        Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="Validation.HasError"
                         Value="True">
                        <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

    
        </ResourceDictionary>
        
    </Application.Resources>
</Application>
